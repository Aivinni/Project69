Index: src/Game.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public class Game {\n    private static Space[][] map;\n\n    public Game(int mapX, int mapY, Interactive[] players) {\n        map = new Space[mapY][mapX];\n        makeMap();\n        for (Interactive player : players) {\n            addToMap(player);\n        }\n    }\n\n    public Space[][] getMap() {\n        return map;\n    }\n\n    public void makeMap() {\n        for (Space[] list : map) {\n            for (int i = 0; i < list.length; i++) {\n                list[i] = new Water(\"Ocean.png\");\n            }\n        }\n    }\n    public void addToMap(Interactive taskForce) {\n        int[] position = taskForce.getPosition();\n        map[position[0]][position[1]] = taskForce;\n    }\n    public void addToMap(Space space, int[] position){\n        map[position[0]][position[1]] = space;\n    }\n    public Space[][] updateMap(Interactive[] players) {\n        for (Space[] list : map) {\n            for (int i = 0; i < list.length; i++) {\n                list[i] = new Water(\"Ocean.png\");\n            }\n        }\n        for (Interactive player : players) {\n            addToMap(player);\n        }\n        return map;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Game.java b/src/Game.java
--- a/src/Game.java	(revision 098e3eeaeaeeb18e6c07a0249659048837532b36)
+++ b/src/Game.java	(date 1711636590133)
@@ -38,4 +38,12 @@
         }
         return map;
     }
+
+    public void detectWithPassive(TaskForce sprite) {
+        System.out.println("detect with passive");
+    }
+
+    public void detectWithActive(TaskForce sprite) {
+        System.out.println("detect with active");
+    }
 }
Index: src/GamePanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.swing.*;\nimport java.awt.*;\nimport java.awt.geom.Arc2D;\n\npublic class GamePanel extends JPanel implements Runnable {\n    public static int tile_size = 48; // default tile size is 12\n    public static final int MAX_SCREEN_COL = 31; //previously 31\n    public static final int MAX_SCREEN_ROW = 18; //previously 18\n\n    private Thread gameThread;\n    private KeyHandler keyH;\n\n    private Game game;\n    private Space[][] map;\n    private TaskForce[] sprites;\n    private int x;\n    private int y;\n    private int x2;\n    private int y2;\n\n    private long lastSonarUseTime;\n    private long lastPassivePulseTime;\n\n    private long lastSonarUseTime2;\n    private long lastPassivePulseTime2;\n\n\n    public GamePanel() {\n        this.setPreferredSize(new Dimension(tile_size * MAX_SCREEN_COL, tile_size * MAX_SCREEN_ROW));\n        this.setBackground(Color.BLACK);\n        this.setDoubleBuffered(true);\n\n        TaskForce char1 = new TaskForce(\"wasd\", new int[]{0, 0}, \"HMS_Hardy_badge.png\");\n        TaskForce char2 = new TaskForce(\"arrows\", new int[]{2, 0}, \"HMS_Jervis_badge.png\");\n        Treasure treasure = new Treasure();\n        Enemy enemy = new Enemy(\"enemy\", new int[]{5, 7});\n        sprites = new TaskForce[]{char1, char2};\n\n        game = new Game(MAX_SCREEN_COL, MAX_SCREEN_ROW, sprites);\n        game.addToMap(treasure);\n        game.addToMap(enemy);\n        map = game.getMap();\n\n        keyH = new KeyHandler();\n        this.addKeyListener(keyH);\n        this.setFocusable(true);\n        startGameThread();\n        setUpWindow();\n    }\n\n    private void setUpWindow() {\n        JFrame window = new JFrame(\"2D GAME\");\n        window.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);\n        window.add(this);\n        window.pack();\n        window.setVisible(true);\n    }\n    @Override\n    public void run() {\n        // variables needed to ensure its locked at 60 fps and below\n        long currentTime = System.nanoTime();\n        long previousTime = currentTime;\n        double delta = 0.0;\n        double sonarTime = 0.0;\n        int FPS = 60;\n        double drawInterval = 1000000000.0 / FPS;\n\n        while (gameThread != null) {\n            // system.nanotime is java's very accurate clock or something (i dont 100% remember)\n            currentTime = System.nanoTime();\n\n            // the time between now and the last time this looped\n            delta += (double) (currentTime - previousTime) / drawInterval;\n\n            if (delta % (int) delta >= 0.999995) {\n                repaint();\n            }\n\n            if (delta >= 6) {\n                if (keyH.isWKeyPressed()) {\n                    move(\"Up\", 0);\n                }\n                if (keyH.isSKeyPressed()) {\n                    move(\"Down\", 0);\n                }\n                if (keyH.isDKeyPressed()) {\n                    move(\"Right\", 0);\n                }\n                if (keyH.isAKeyPressed()) {\n                    move(\"Left\", 0);\n                }\n\n                if (keyH.isUpKeyPressed()){\n                    move(\"Up\", 1);\n                }\n                if (keyH.isDownKeyPressed()){\n                    move(\"Down\", 1);\n                }\n                if (keyH.isRightKeyPressed()){\n                    move(\"Right\", 1);\n                }\n                if (keyH.isLeftKeyPressed()){\n                    move(\"Left\", 1);\n                }\n                delta = 0;\n            }\n\n            sonarTime += (double) (currentTime - previousTime) / drawInterval;\n\n            if (!sprites[0].isActiveSonarJustUsed()) {\n                if (keyH.isFKeyPressed()) {\n                    sprites[0].toggleSonarOn();\n                    sprites[0].setSonarReady(false);\n                }\n            }\n\n            if (!sprites[1].isActiveSonarJustUsed()) {\n                if (keyH.isNKeyPressed()) {\n                    sprites[1].toggleSonarOn();\n                    sprites[1].setSonarReady(false);\n                }\n            }\n\n            x = sprites[0].getPosition()[1] * tile_size;\n            y = sprites[0].getPosition()[0] * tile_size;\n            x2 = sprites[1].getPosition()[1] * tile_size;\n            y2 = sprites[1].getPosition()[0] * tile_size;\n\n            previousTime = currentTime;\n        }\n    }\n    private void move(String direction, int sprite){\n        Interactive a = sprites[sprite];\n        if (direction.equalsIgnoreCase(\"Up\")&& a.getPosition()[0] > 0) {\n            a.setPosition(a.getPosition()[0] - 1, a.getPosition()[1]);\n        }\n        if (direction.equalsIgnoreCase(\"Left\")&& a.getPosition()[1] > 0) {\n            a.setPosition(a.getPosition()[0], a.getPosition()[1] - 1);\n        }\n        if (direction.equalsIgnoreCase(\"Down\")&& a.getPosition()[0] < MAX_SCREEN_ROW - 1) {\n            a.setPosition(a.getPosition()[0] + 1, a.getPosition()[1]);\n        }\n        if (direction.equalsIgnoreCase(\"Right\")&& a.getPosition()[1] < MAX_SCREEN_COL - 1) {\n            a.setPosition(a.getPosition()[0], a.getPosition()[1] + 1);\n        }\n    }\n    @Override\n    public void paintComponent(Graphics g) {\n        super.paintComponent(g);\n\n       Graphics2D g2D = (Graphics2D) g;\n\n        map = game.updateMap(sprites);\n        for (int i = 0; i < map.length; i++) {\n            for (int j = 0; j < map[i].length; j++) {\n                g.drawImage(map[i][j].getImage(), j * tile_size, i * tile_size, tile_size, tile_size, null);\n            }\n        }\n\n\n        double active;\n        double passive;\n        if (sprites[0].isUsingSonar()) {\n            active = sprites[0].getSonarScale();\n            float alpha = 1 - ((float) active / 7);\n            Color color = new Color(0, 1, 0, alpha);\n            g2D.setPaint(color);\n            g2D.drawOval((int) (x - ((tile_size * active) / 2)) + (tile_size / 2), (int) (y - ((tile_size * active) / 2)) + (tile_size / 2), (int) (tile_size * active), (int) (tile_size * active));\n            sprites[0].incrementSonarScale();\n            if (sprites[0].isActiveSonarJustUsed()) {\n                lastSonarUseTime = System.nanoTime();\n            }\n            sprites[0].resetPassiveSonarScale();\n        } else {\n            if (!sprites[0].isActiveSonarJustUsed()) {\n                if (!sprites[0].isPassiveSonarJustUsed()) {\n                    passive = sprites[0].getPassiveSonarScale();\n                    float alpha = 1 - ((float) passive / 4);\n                    Color color = new Color(0, 1, 0, alpha);\n                    g2D.setPaint(color);\n                    g2D.drawOval((int) (x - ((tile_size * passive) / 2)) + (tile_size / 2), (int) (y - ((tile_size * passive) / 2)) + (tile_size / 2), (int) (tile_size * passive), (int) (tile_size * passive));\n                    sprites[0].incrementPassiveSonarScale();\n                    if (sprites[0].isPassiveSonarJustUsed()) {\n                        lastPassivePulseTime = System.nanoTime();\n                    }\n                } else {\n                    long passiveDelay = 500000000;\n                    if (System.nanoTime() - lastPassivePulseTime > passiveDelay) {\n                        sprites[0].setPassiveSonarJustUsed(false);\n                    }\n                }\n\n            } else {\n                long delay = 3;\n                if ((System.nanoTime() - lastSonarUseTime) / 1000000000 > delay) {\n                    sprites[0].setActiveSonarJustUsed(false);\n                } else {\n                    g.setColor(Color.CYAN);\n                    g.setFont(new Font(\"SansSerif\", Font.PLAIN, 18 ));\n                    if (sprites[0].getPosition()[0] > (MAX_SCREEN_ROW/2)-3) {\n                        //for cooldown above\n                        g.drawString(String.valueOf(3-(int)((System.nanoTime() - lastSonarUseTime) / 1000000000)), x + (tile_size/4) + (tile_size/5), y - (tile_size/4));\n                    } else {\n                        //for cooldown below\n                        g.drawString(String.valueOf(3 - (int) ((System.nanoTime() - lastSonarUseTime) / 1000000000)), x + (tile_size / 4) + (tile_size / 5), y + tile_size + (tile_size / 2));\n                    }\n                }\n            }\n        }\n\n        double active2;\n        double passive2;\n        if (sprites[1].isUsingSonar()) {\n            active2 = sprites[1].getSonarScale();\n            float alpha = 1 - ((float) active2 / 7);\n            Color color = new Color(0, 1, 0, alpha);\n            g2D.setPaint(color);\n            g2D.drawOval((int) (x2 - ((tile_size * active2) / 2)) + (tile_size / 2), (int) (y2 - ((tile_size * active2) / 2)) + (tile_size / 2), (int) (tile_size * active2), (int) (tile_size * active2));\n            sprites[1].incrementSonarScale();\n            if (sprites[1].isActiveSonarJustUsed()) {\n                lastSonarUseTime2 = System.nanoTime();\n            }\n            sprites[1].resetPassiveSonarScale();\n        } else {\n            if (!sprites[1].isActiveSonarJustUsed()) {\n                if (!sprites[1].isPassiveSonarJustUsed()) {\n                    passive2 = sprites[1].getPassiveSonarScale();\n                    float alpha = 1 - ((float) passive2 / 4);\n                    Color color = new Color(0, 1, 0, alpha);\n                    g2D.setPaint(color);\n                    g2D.drawOval((int) (x2 - ((tile_size * passive2) / 2)) + (tile_size / 2), (int) (y2 - ((tile_size * passive2) / 2)) + (tile_size / 2), (int) (tile_size * passive2), (int) (tile_size * passive2));\n                    sprites[1].incrementPassiveSonarScale();\n                    if (sprites[1].isPassiveSonarJustUsed()) {\n                        lastPassivePulseTime2 = System.nanoTime();\n                    }\n                } else {\n                    long passiveDelay = 500000000;\n                    if (System.nanoTime() - lastPassivePulseTime2 > passiveDelay) {\n                        sprites[1].setPassiveSonarJustUsed(false);\n                    }\n                }\n\n            } else {\n                long delay = 3;\n                if ((System.nanoTime() - lastSonarUseTime2) / 1000000000 > delay) {\n                    sprites[1].setActiveSonarJustUsed(false);\n                } else {\n                    g.setColor(Color.CYAN);\n                    g.setFont(new Font(\"SansSerif\", Font.PLAIN, 18 ));\n                    if (sprites[1].getPosition()[0] > (MAX_SCREEN_ROW / 2) - 3) {\n                        //for cooldown above\n                        g.drawString(String.valueOf(3-(int)((System.nanoTime() - lastSonarUseTime2) / 1000000000)), x2 + (tile_size/4) + (tile_size/5), y2 - (tile_size/4));\n                    } else {\n                        //for cooldown below\n                        g.drawString(String.valueOf(3 - (int) ((System.nanoTime() - lastSonarUseTime2) / 1000000000)), x2 + (tile_size / 4) + (tile_size / 5), y2 + tile_size + (tile_size / 2));\n                    }\n                }\n            }\n        }\n//        passive = sprites[1].getPassiveSonarScale();\n//        float alpha = 1 - ((float) passive / 4);\n//        Color color = new Color(0, 1, 0, alpha);\n//        g2D.setPaint(color);\n//        g2D.drawOval((int) (x2 - ((tile_size * passive) / 2)) + (tile_size / 2), (int) (y2 - ((tile_size * passive) / 2)) + (tile_size / 2), (int) (tile_size * passive), (int) (tile_size * passive));\n//        sprites[1].incrementPassiveSonarScale();\n\n        boolean showtext = true;\n\n        if (showtext) {\n            g2D.setPaint(Color.black);\n\n            Stroke stroke = new BasicStroke(2.0f);\n            g2D.setStroke(stroke);\n\n\n            int rectWidth = (MAX_SCREEN_COL / 4) * tile_size;\n            int rectCenterX = (MAX_SCREEN_COL * tile_size) / 2;\n            int rectX = rectCenterX - (rectWidth / 2);\n\n            int rectHeight = (MAX_SCREEN_ROW / 6) * tile_size;\n            int rectCenterY = (MAX_SCREEN_ROW * tile_size) / 6;\n            int rectY = rectCenterY - (rectHeight / 2);\n            // Draw border\n            g2D.drawRect(rectX - 1, rectY - 1, rectWidth + 2, rectHeight + 2);\n\n            Color brownishBlack = new Color(35, 26, 26, 200);\n            g2D.setPaint(brownishBlack);\n\n            // Transparent box\n            g2D.fillRect(rectX, rectY, rectWidth, rectHeight);\n\n            g2D.setPaint(Color.white);\n            g2D.drawString(\"Hello World\", rectX, rectCenterY);\n        }\n    }\n\n\n\n    private void startGameThread() {\n        gameThread = new Thread(this);\n        gameThread.start();\n    }\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/GamePanel.java b/src/GamePanel.java
--- a/src/GamePanel.java	(revision 098e3eeaeaeeb18e6c07a0249659048837532b36)
+++ b/src/GamePanel.java	(date 1711636590131)
@@ -168,9 +168,10 @@
             g2D.drawOval((int) (x - ((tile_size * active) / 2)) + (tile_size / 2), (int) (y - ((tile_size * active) / 2)) + (tile_size / 2), (int) (tile_size * active), (int) (tile_size * active));
             sprites[0].incrementSonarScale();
             if (sprites[0].isActiveSonarJustUsed()) {
-                lastSonarUseTime = System.nanoTime();
-            }
-            sprites[0].resetPassiveSonarScale();
+                game.detectWithActive(sprites[0]);
+                sprites[0].resetPassiveSonarScale();
+            }
+
         } else {
             if (!sprites[0].isActiveSonarJustUsed()) {
                 if (!sprites[0].isPassiveSonarJustUsed()) {
@@ -182,9 +183,10 @@
                     sprites[0].incrementPassiveSonarScale();
                     if (sprites[0].isPassiveSonarJustUsed()) {
                         lastPassivePulseTime = System.nanoTime();
+                        game.detectWithPassive(sprites[0]);
                     }
                 } else {
-                    long passiveDelay = 500000000;
+                    long passiveDelay = 750000000;
                     if (System.nanoTime() - lastPassivePulseTime > passiveDelay) {
                         sprites[0].setPassiveSonarJustUsed(false);
                     }
@@ -218,9 +220,10 @@
             g2D.drawOval((int) (x2 - ((tile_size * active2) / 2)) + (tile_size / 2), (int) (y2 - ((tile_size * active2) / 2)) + (tile_size / 2), (int) (tile_size * active2), (int) (tile_size * active2));
             sprites[1].incrementSonarScale();
             if (sprites[1].isActiveSonarJustUsed()) {
+                game.detectWithActive(sprites[1]);
                 lastSonarUseTime2 = System.nanoTime();
-            }
-            sprites[1].resetPassiveSonarScale();
+                sprites[1].resetPassiveSonarScale();
+            }
         } else {
             if (!sprites[1].isActiveSonarJustUsed()) {
                 if (!sprites[1].isPassiveSonarJustUsed()) {
@@ -232,9 +235,10 @@
                     sprites[1].incrementPassiveSonarScale();
                     if (sprites[1].isPassiveSonarJustUsed()) {
                         lastPassivePulseTime2 = System.nanoTime();
+                        game.detectWithPassive(sprites[1]);
                     }
                 } else {
-                    long passiveDelay = 500000000;
+                    long passiveDelay = 750000000;
                     if (System.nanoTime() - lastPassivePulseTime2 > passiveDelay) {
                         sprites[1].setPassiveSonarJustUsed(false);
                     }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"fdc42366-b47f-4955-9487-fccb0f5f764b\" name=\"Changes\" comment=\"Sonar for both sprites\" />\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;Aivinni&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">\n    <option name=\"selectedUrlAndAccountId\">\n      <UrlAndAccount>\n        <option name=\"accountId\" value=\"5536e75f-eb7d-4787-b5af-22c60da04add\" />\n        <option name=\"url\" value=\"https://github.com/Aivinni/Project69.git\" />\n      </UrlAndAccount>\n    </option>\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 2\n}</component>\n  <component name=\"ProjectId\" id=\"2dalF6p3BV9lRPd3COLJSXHR3FG\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;\n  }\n}</component>\n  <component name=\"RunManager\">\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\n      <module name=\"Project69\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.Main\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"fdc42366-b47f-4955-9487-fccb0f5f764b\" name=\"Changes\" comment=\"\" />\n      <created>1710253964652</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1710253964652</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"messing around\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710255501874</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710255501874</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"messing around\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710255607498</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710255607498</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"unknown changes\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710337073152</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710337073152</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"size change\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710339980689</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710339980689</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Add classes\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710340920997</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710340920997</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710341631163</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710341631163</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"movement update\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710423393567</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710423393567</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"changes\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710425902134</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710425902134</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"images\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710511071630</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710511071630</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"edits\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710512881377</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710512881377</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"changes\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710723709192</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710723709192</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"refactoring\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710731132444</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710731132444</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"Movement changes\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710731367336</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710731367336</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"Exceptions eliminated\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710770701045</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710770701045</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"Sonar working. (don't ask how)\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710819041887</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710819041887</updated>\n    </task>\n    <task id=\"LOCAL-00016\" summary=\"sonar expansion\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710855603173</created>\n      <option name=\"number\" value=\"00016\" />\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710855603173</updated>\n    </task>\n    <task id=\"LOCAL-00017\" summary=\"fade\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710857251774</created>\n      <option name=\"number\" value=\"00017\" />\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710857251774</updated>\n    </task>\n    <task id=\"LOCAL-00018\" summary=\"repaint and key handler separation\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710857657262</created>\n      <option name=\"number\" value=\"00018\" />\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710857657262</updated>\n    </task>\n    <task id=\"LOCAL-00019\" summary=\"draw rectangle\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1711465009676</created>\n      <option name=\"number\" value=\"00019\" />\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1711465009676</updated>\n    </task>\n    <task id=\"LOCAL-00020\" summary=\"pop up rectangle (need to make disappear most times)\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1711510523059</created>\n      <option name=\"number\" value=\"00020\" />\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1711510523059</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"21\" />\n    <servers />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"messing around\" />\n    <MESSAGE value=\"unknown changes\" />\n    <MESSAGE value=\"size change\" />\n    <MESSAGE value=\"Add classes\" />\n    <MESSAGE value=\"commit\" />\n    <MESSAGE value=\"movement update\" />\n    <MESSAGE value=\"images\" />\n    <MESSAGE value=\"edits\" />\n    <MESSAGE value=\"changes\" />\n    <MESSAGE value=\"refactoring\" />\n    <MESSAGE value=\"Movement changes\" />\n    <MESSAGE value=\"Exceptions eliminated\" />\n    <MESSAGE value=\"Sonar working. (don't ask how)\" />\n    <MESSAGE value=\"sonar expansion\" />\n    <MESSAGE value=\"fade\" />\n    <MESSAGE value=\"repaint and key handler separation\" />\n    <MESSAGE value=\"draw rectangle\" />\n    <MESSAGE value=\"pop up rectangle (need to make disappear most times)\" />\n    <MESSAGE value=\"Sonar for both sprites\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Sonar for both sprites\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 098e3eeaeaeeb18e6c07a0249659048837532b36)
+++ b/.idea/workspace.xml	(date 1711636970267)
@@ -4,7 +4,11 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="fdc42366-b47f-4955-9487-fccb0f5f764b" name="Changes" comment="Sonar for both sprites" />
+    <list default="true" id="fdc42366-b47f-4955-9487-fccb0f5f764b" name="Changes" comment="Sonar for both sprites Fin.">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Game.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Game.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/GamePanel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/GamePanel.java" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -233,7 +237,15 @@
       <option name="project" value="LOCAL" />
       <updated>1711510523059</updated>
     </task>
-    <option name="localTasksCounter" value="21" />
+    <task id="LOCAL-00021" summary="Sonar for both sprites Fin.">
+      <option name="closed" value="true" />
+      <created>1711633110782</created>
+      <option name="number" value="00021" />
+      <option name="presentableId" value="LOCAL-00021" />
+      <option name="project" value="LOCAL" />
+      <updated>1711633110782</updated>
+    </task>
+    <option name="localTasksCounter" value="22" />
     <servers />
   </component>
   <component name="VcsManagerConfiguration">
@@ -256,6 +268,7 @@
     <MESSAGE value="draw rectangle" />
     <MESSAGE value="pop up rectangle (need to make disappear most times)" />
     <MESSAGE value="Sonar for both sprites" />
-    <option name="LAST_COMMIT_MESSAGE" value="Sonar for both sprites" />
+    <MESSAGE value="Sonar for both sprites Fin." />
+    <option name="LAST_COMMIT_MESSAGE" value="Sonar for both sprites Fin." />
   </component>
 </project>
\ No newline at end of file
