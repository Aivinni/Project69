Index: src/KeyHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.awt.event.KeyEvent;\r\nimport java.awt.event.KeyListener;\r\n\r\npublic class KeyHandler implements KeyListener {\r\n\r\n    private boolean wKeyPressed, sKeyPressed, aKeyPressed, dKeyPressed; // movement keys\r\n    private boolean fKeyPressed; // interact key\r\n    private boolean upKeyPressed, downKeyPressed, leftKeyPressed, rightKeyPressed; // attack keys\r\n    public KeyHandler(){}\r\n    public boolean isUpKeyPressed() {\r\n        return upKeyPressed;\r\n    }\r\n\r\n    public boolean isDownKeyPressed() {\r\n        return downKeyPressed;\r\n    }\r\n\r\n    public boolean isLeftKeyPressed() {\r\n        return leftKeyPressed;\r\n    }\r\n\r\n    public boolean isRightKeyPressed() {\r\n        return rightKeyPressed;\r\n    }\r\n\r\n    public boolean isWKeyPressed() {\r\n        return wKeyPressed;\r\n    }\r\n    public boolean isAKeyPressed() {\r\n        return aKeyPressed;\r\n    }\r\n\r\n    public boolean isDKeyPressed() {\r\n        return dKeyPressed;\r\n    }\r\n\r\n    public boolean isSKeyPressed() {\r\n        return sKeyPressed;\r\n    }\r\n\r\n    public boolean isFKeyPressed() {\r\n        return fKeyPressed;\r\n    }\r\n\r\n    @Override\r\n    public void keyTyped(KeyEvent e) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void keyPressed(KeyEvent e) {\r\n        int code = e.getKeyCode();\r\n\r\n        switch (code) {\r\n            case KeyEvent.VK_W -> wKeyPressed = true;\r\n            case KeyEvent.VK_S -> sKeyPressed = true;\r\n            case KeyEvent.VK_A -> aKeyPressed = true;\r\n            case KeyEvent.VK_D -> dKeyPressed = true;\r\n            case KeyEvent.VK_F -> fKeyPressed = true;\r\n            case KeyEvent.VK_UP -> upKeyPressed = true;\r\n            case KeyEvent.VK_DOWN -> downKeyPressed = true;\r\n            case KeyEvent.VK_LEFT -> leftKeyPressed = true;\r\n            case KeyEvent.VK_RIGHT -> rightKeyPressed = true;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void keyReleased(KeyEvent e) {\r\n        switch (e.getKeyCode()) {\r\n            case KeyEvent.VK_W -> wKeyPressed = false;\r\n            case KeyEvent.VK_S -> sKeyPressed = false;\r\n            case KeyEvent.VK_A -> aKeyPressed = false;\r\n            case KeyEvent.VK_D -> dKeyPressed = false;\r\n            case KeyEvent.VK_UP -> upKeyPressed = false;\r\n            case KeyEvent.VK_DOWN -> downKeyPressed = false;\r\n            case KeyEvent.VK_LEFT -> leftKeyPressed = false;\r\n            case KeyEvent.VK_RIGHT -> rightKeyPressed = false;\r\n            case KeyEvent.VK_F -> fKeyPressed = false;\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/KeyHandler.java b/src/KeyHandler.java
--- a/src/KeyHandler.java	(revision eca9ff20c00023c9f5e0284aff611f6f949ce162)
+++ b/src/KeyHandler.java	(date 1710341082837)
@@ -44,7 +44,17 @@
 
     @Override
     public void keyTyped(KeyEvent e) {
-
+        switch (e.getKeyCode()) {
+            case KeyEvent.VK_W -> wKeyPressed = true;
+            case KeyEvent.VK_S -> sKeyPressed = true;
+            case KeyEvent.VK_A -> aKeyPressed = true;
+            case KeyEvent.VK_D -> dKeyPressed = true;
+            case KeyEvent.VK_F -> fKeyPressed = true;
+            case KeyEvent.VK_UP -> upKeyPressed = true;
+            case KeyEvent.VK_DOWN -> downKeyPressed = true;
+            case KeyEvent.VK_LEFT -> leftKeyPressed = true;
+            case KeyEvent.VK_RIGHT -> rightKeyPressed = true;
+        }
     }
 
     @Override
Index: src/GamePanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.swing.*;\r\nimport java.awt.*;\r\n\r\npublic class GamePanel extends JPanel implements Runnable {\r\n    public static int tile_size = 12; // default tile size is 12\r\n    public static final int MAX_SCREEN_COL = 128; // used for how to draw tiles\r\n    public static final int MAX_SCREEN_ROW = 72;\r\n\r\n    // GAME LOOP\r\n    private Thread gameThread;\r\n    // TRACKING INPUT\r\n    KeyHandler keyH;\r\n    // TEST VARIABLES\r\n    int x = 0;\r\n    int y = 0;\r\n    public GamePanel() {\r\n        // setting up size of the panel\r\n        this.setPreferredSize(new Dimension(tile_size * MAX_SCREEN_COL, tile_size * MAX_SCREEN_ROW));\r\n        this.setBackground(Color.WHITE);\r\n        this.setDoubleBuffered(true);\r\n\r\n        keyH = new KeyHandler();\r\n        this.addKeyListener(keyH);\r\n        this.setFocusable(true);\r\n\r\n        startGameThread();\r\n        setUpWindow();\r\n    }\r\n\r\n    @Override\r\n    public void run() {\r\n        // variables needed to ensure its locked at 60 fps and below\r\n        long currentTime = System.nanoTime();\r\n        long previousTime = currentTime;\r\n        double delta = 0.0;\r\n        int FPS = 60;\r\n        double drawInterval = 1000000000.0 / FPS;\r\n\r\n        while (gameThread != null) {\r\n            // system.nanotime is java's very accurate clock or something (i dont 100% remember)\r\n            currentTime = System.nanoTime();\r\n\r\n            // the time between now and the least time this looped\r\n            delta += (double) (currentTime - previousTime) / drawInterval;\r\n\r\n            previousTime = currentTime;\r\n            if (delta >= 0.5) {\r\n                // delta being 1 or greater means 1/60 of a second;\r\n                repaint();\r\n                if (keyH.isWKeyPressed()||keyH.isUpKeyPressed()) {\r\n                    y--;\r\n                }\r\n                if (keyH.isSKeyPressed()||keyH.isDownKeyPressed()) {\r\n                    y++;\r\n                }\r\n                if (keyH.isDKeyPressed()||keyH.isRightKeyPressed()) {\r\n                    x++;\r\n                }\r\n                if (keyH.isAKeyPressed()||keyH.isLeftKeyPressed()) {\r\n                    x--;\r\n                }\r\n                delta = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void paintComponent(Graphics g) {\r\n        super.paintComponent(g);\r\n\r\n        Graphics2D g2D = (Graphics2D) g;\r\n        g2D.setColor(Color.PINK);\r\n        g2D.fillRect(x, y, 12, 12);\r\n    }\r\n\r\n    private void setUpWindow() {\r\n        JFrame window = new JFrame(\"2D GAME\");\r\n        window.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);\r\n        window.add(this);\r\n        window.pack();\r\n        window.setVisible(true);\r\n    }\r\n\r\n    private void startGameThread() {\r\n        gameThread = new Thread(this);\r\n        gameThread.start();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/GamePanel.java b/src/GamePanel.java
--- a/src/GamePanel.java	(revision eca9ff20c00023c9f5e0284aff611f6f949ce162)
+++ b/src/GamePanel.java	(date 1710341082827)
@@ -44,20 +44,20 @@
             delta += (double) (currentTime - previousTime) / drawInterval;
 
             previousTime = currentTime;
-            if (delta >= 0.5) {
                 // delta being 1 or greater means 1/60 of a second;
+            if (delta >= 1) {
                 repaint();
-                if (keyH.isWKeyPressed()||keyH.isUpKeyPressed()) {
+                if (keyH.isWKeyPressed() || keyH.isUpKeyPressed()) {
                     y--;
                 }
-                if (keyH.isSKeyPressed()||keyH.isDownKeyPressed()) {
-                    y++;
+                if (keyH.isSKeyPressed() || keyH.isDownKeyPressed()) {
+                    y ++;
                 }
-                if (keyH.isDKeyPressed()||keyH.isRightKeyPressed()) {
-                    x++;
+                if (keyH.isDKeyPressed() || keyH.isRightKeyPressed()) {
+                    x ++;
                 }
-                if (keyH.isAKeyPressed()||keyH.isLeftKeyPressed()) {
-                    x--;
+                if (keyH.isAKeyPressed() || keyH.isLeftKeyPressed()) {
+                    x --;
                 }
                 delta = 0;
             }
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" default=\"true\" project-jdk-name=\"17\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision eca9ff20c00023c9f5e0284aff611f6f949ce162)
+++ b/.idea/misc.xml	(date 1710340141022)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="17" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_20" default="true" project-jdk-name="17" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"fdc42366-b47f-4955-9487-fccb0f5f764b\" name=\"Changes\" comment=\"unknown changes\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/GamePanel.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/GamePanel.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;Aivinni&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"5536e75f-eb7d-4787-b5af-22c60da04add\" />\r\n        <option name=\"url\" value=\"https://github.com/Aivinni/Project69.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 2\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2dalF6p3BV9lRPd3COLJSXHR3FG\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;\r\n  }\r\n}</component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"fdc42366-b47f-4955-9487-fccb0f5f764b\" name=\"Changes\" comment=\"\" />\r\n      <created>1710253964652</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1710253964652</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"messing around\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1710255501874</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1710255501874</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"messing around\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1710255607498</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1710255607498</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"unknown changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1710337073152</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1710337073152</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"messing around\" />\r\n    <MESSAGE value=\"unknown changes\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"unknown changes\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision eca9ff20c00023c9f5e0284aff611f6f949ce162)
+++ b/.idea/workspace.xml	(date 1710341082857)
@@ -4,9 +4,11 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="fdc42366-b47f-4955-9487-fccb0f5f764b" name="Changes" comment="unknown changes">
+    <list default="true" id="fdc42366-b47f-4955-9487-fccb0f5f764b" name="Changes" comment="messing around">
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/GamePanel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/GamePanel.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/KeyHandler.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/KeyHandler.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -53,6 +55,20 @@
     &quot;git-widget-placeholder&quot;: &quot;main&quot;
   }
 }</component>
+  <component name="RunManager">
+    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="Main" />
+      <module name="Project69" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <recent_temporary>
+      <list>
+        <item itemvalue="Application.Main" />
+      </list>
+    </recent_temporary>
+  </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
@@ -78,20 +94,11 @@
       <option name="project" value="LOCAL" />
       <updated>1710255607498</updated>
     </task>
-    <task id="LOCAL-00003" summary="unknown changes">
-      <option name="closed" value="true" />
-      <created>1710337073152</created>
-      <option name="number" value="00003" />
-      <option name="presentableId" value="LOCAL-00003" />
-      <option name="project" value="LOCAL" />
-      <updated>1710337073152</updated>
-    </task>
-    <option name="localTasksCounter" value="4" />
+    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="messing around" />
-    <MESSAGE value="unknown changes" />
-    <option name="LAST_COMMIT_MESSAGE" value="unknown changes" />
+    <option name="LAST_COMMIT_MESSAGE" value="messing around" />
   </component>
 </project>
\ No newline at end of file
